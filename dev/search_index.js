var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Wahoo","category":"page"},{"location":"#Wahoo","page":"Home","title":"Wahoo","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Wahoo.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Wahoo]","category":"page"},{"location":"#Wahoo.divzero-Tuple{Any, Any}","page":"Home","title":"Wahoo.divzero","text":"Define division by zero as equal to zero.\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.make_kernel-Tuple{}","page":"Home","title":"Wahoo.make_kernel","text":"Compute convolution kernel and the required number of hope per time steps\n\nD: diffusion coefficient h: spatial resolution\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.one_hot!-Tuple{Array, Any, Any}","page":"Home","title":"Wahoo.one_hot!","text":"Set all values of A to zero except A[y,x] to one.\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.sample_index-Tuple{Array}","page":"Home","title":"Wahoo.sample_index","text":"If dist is a array of probabilities, sample an element and returns the first two indices.\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.sample_trajectories-NTuple{6, Any}","page":"Home","title":"Wahoo.sample_trajectories","text":"Sample random trajectories form the joint distribution Prob(s{1...T} | y{1...T}).\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.time2index-Tuple{Any, Any}","page":"Home","title":"Wahoo.time2index","text":"Maps time step to the index of pos_filter and pos_smoother\n\n\n\n\n\n","category":"method"},{"location":"#Wahoo.track-Tuple{}","page":"Home","title":"Wahoo.track","text":"Tracks the location of the fish\n\ntrack(;pos_init::Matrix, bathymetry::GeoArrays.GeoArray,\n       observations::Vector,\n       observation_models::Vector,\n       sensor_positions::Vector,\n       tsave::AbstractVector = 1:100,\n       spatial_resolution,\n       movement_std,\n       save_filter::Bool = false,\n       n_trajectories::Int = 0,\n       show_progressbar::Bool = !is_logging(stderr),\n       precision = Float32)\n\nUses forward filtering based on a diffusion model and optionally smoothing.\n\nArguments\n\npos_init::Matrix: Initial probability distribution of the fish positions\nbathymetry: Bathymetric data of the environment\nspatial_resolution: the spatial resolution [m] of the bathymetry.\nmovement_std: Standard deviation of the fish movement for one time step [m]\nobservations: Vector of all observations\nsensor_positions: Vector of tuples or nothing containing the positions of the receivers\ntsave::AbstractVector: Time steps at which the probability map is saved.\nsave_filter: if true the proabilities from the filter run are returned.\nn_trajectories=0: Number of trajectories to sample\nshow_progressbar = !is_logging(stderr): defaults to true for interactive use.\nprecision = Float32: numerical floating point type used for computations\n\n\n\n\n\n","category":"method"}]
}
