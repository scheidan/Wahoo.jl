var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Wahoo","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for Wahoo.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Wahoo.jl","page":"Home","title":"Wahoo.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Wahoo is a package designed for tracking the movement of marine animals using probabilistic models","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"] add git@github.com:scheidan/Wahoo.jl.git","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TODO","category":"page"},{"location":"#Defining-observation-models","page":"Home","title":"Defining observation models","text":"","category":"section"},{"location":"#Using-GPU","page":"Home","title":"Using GPU","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"todo","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"track","category":"page"},{"location":"#Wahoo.track","page":"Home","title":"Wahoo.track","text":"Tracks the location of the fish\n\ntrack(;pos_init::Matrix,\n       tsave::AbstractVector = 1:100,\n       bathymetry::GeoArrays.GeoArray,\n       observations::Vector,\n       observation_models::Vector{Function},\n       sensor_positions::Vector,\n       spatial_resolution,\n       movement_std,\n       save_filter::Bool = false,\n       n_trajectories::Int = 0,\n       show_progressbar::Bool = !is_logging(stderr),\n       precision = Float32)\n\nInfers the location of the animal based on a diffusion model and smoothing.\n\nKeyword Arguments\n\npos_init::Matrix: Initial probability distribution of the fish position\ntsave::AbstractVector: Time steps at which the probability map is saved.\nbathymetry: Bathymetric data as GeoArray\nspatial_resolution: the spatial resolution [m] of the bathymetry.\nmovement_std: Standard deviation of the fish movement within one time step [m]\nobservations: Vector holding all observations. Each element contains the observation of a separate sensor.\nobservation_models::Vector{Function}: Vector containing the observation model for each sensor.\nsensor_positions: Vector of tuples of coordinates or nothing, i.e. Vector{Union{Nothing, Tuple{Real, Real}}}\nsave_filter: if true the probabilities from the filter run are returned.\nn_trajectories=0: Number of trajectories to sample\nshow_progressbar = !is_logging(stderr): defaults to true for interactive use.\nprecision = Float32: numerical floating point type used for computations\n\nNote, the elements of the vectors observations, observation_models, and sensor_positions must be sorted in the same way, i.e. the elements at the same position in the Vectors refer to the same sensor.\n\nReturn\n\nA named tuple with the following elements:\n\npos_smoother: Smoothed probability distribution of the fish positions for all timesteps in tsave.\nresidence_dist: Residence distribution.\ntrajectories: Sampled trajectories if n_trajectories > 0, otherwise nothing.\nlog_p: Log probability of the observations.\ntsave: Vector of time steps at which the results are saved.\npos_filter: Filtered  probability distribution of the fish positions, included if save_filter = true.\n\n\n\n\n\n","category":"function"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The filter and smoother implementation is based on:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Thygesen, Uffe Høgsbro, Martin Wæver Pedersen, and Henrik Madsen. 2009. “Geolocating Fish Using Hidden Markov Models and Data Storage Tags.” In Tagging and Tracking of Marine Animals with Electronic Devices, 277–93. Dordrecht: Springer Netherlands. https://doi.org/10.1007/978-1-4020-9640-2_17.","category":"page"}]
}
